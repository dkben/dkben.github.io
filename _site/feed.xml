<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2021-09-20T23:58:54+08:00</updated><id>/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">靜態資源認證保護</title><link href="/nginx/2021/03/17/%E9%9D%9C%E6%85%8B%E8%B3%87%E6%BA%90%E8%AA%8D%E8%AD%89%E4%BF%9D%E8%AD%B7.html" rel="alternate" type="text/html" title="靜態資源認證保護" /><published>2021-03-17T09:00:00+08:00</published><updated>2021-03-17T09:00:00+08:00</updated><id>/nginx/2021/03/17/%E9%9D%9C%E6%85%8B%E8%B3%87%E6%BA%90%E8%AA%8D%E8%AD%89%E4%BF%9D%E8%AD%B7</id><content type="html" xml:base="/nginx/2021/03/17/%E9%9D%9C%E6%85%8B%E8%B3%87%E6%BA%90%E8%AA%8D%E8%AD%89%E4%BF%9D%E8%AD%B7.html">&lt;p&gt;網路檔案系統及驗證方法&lt;/p&gt;

&lt;p&gt;讀取靜態資源前都要先完成指定認證&lt;/p&gt;

&lt;p&gt;下面連結是透過Nginx來實現靜態資源認證保護的方式&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://hsu-wen-i.medium.com/%E9%9D%9C%E6%85%8B%E8%B3%87%E6%BA%90%E8%AA%8D%E8%AD%89%E4%BF%9D%E8%AD%B7-e0cd50b6db58&quot;&gt;靜態資源認證保護&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="Nginx" /><category term="Nginx" /><summary type="html">網路檔案系統及驗證方法</summary></entry><entry><title type="html">Hubot 聊天機器人串 Slack，並使用 GitLab CICD 自動佈署及啟動</title><link href="/integrations/2021/03/16/Hubot-%E8%81%8A%E5%A4%A9%E6%A9%9F%E5%99%A8%E4%BA%BA%E4%B8%B2-Slack-%E4%B8%A6%E4%BD%BF%E7%94%A8-GitLab-CICD-%E8%87%AA%E5%8B%95%E4%BD%88%E7%BD%B2%E5%8F%8A%E5%95%9F%E5%8B%95.html" rel="alternate" type="text/html" title="Hubot 聊天機器人串 Slack，並使用 GitLab CICD 自動佈署及啟動" /><published>2021-03-16T09:00:00+08:00</published><updated>2021-03-16T09:00:00+08:00</updated><id>/integrations/2021/03/16/Hubot%20%E8%81%8A%E5%A4%A9%E6%A9%9F%E5%99%A8%E4%BA%BA%E4%B8%B2%20Slack,%E4%B8%A6%E4%BD%BF%E7%94%A8%20GitLab%20CICD%20%E8%87%AA%E5%8B%95%E4%BD%88%E7%BD%B2%E5%8F%8A%E5%95%9F%E5%8B%95</id><content type="html" xml:base="/integrations/2021/03/16/Hubot-%E8%81%8A%E5%A4%A9%E6%A9%9F%E5%99%A8%E4%BA%BA%E4%B8%B2-Slack-%E4%B8%A6%E4%BD%BF%E7%94%A8-GitLab-CICD-%E8%87%AA%E5%8B%95%E4%BD%88%E7%BD%B2%E5%8F%8A%E5%95%9F%E5%8B%95.html">&lt;p&gt;先到自己的 Slack 安裝 Hubot App&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://hsuweni.slack.com/apps&quot;&gt;https://hsuweni.slack.com/apps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__9bHpKKti56H9osZAo7bKig.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;給它一個名字&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__cR8UkhG0__vhxUKO7Qpy0EA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;會得到一個 API Key&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__oaYW3oKw97__n1jYcNRoZXw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;yeoman 是一個整合工具包 SCAFFOLDING TOOL 腳手架工具&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://yeoman.io/&quot;&gt;https://yeoman.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;全域安裝&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install -g yo generator-hubot&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__7qPYpHr20smVxs7LRKV5Hg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一直無法成功…&lt;/p&gt;

&lt;p&gt;算了，睡覺去….&lt;/p&gt;

&lt;p&gt;結果一覺醒來，重新嘗試就可以安裝了&lt;/p&gt;

&lt;p&gt;不過我習慣電腦不關機，但會把程式關閉，所以有可能是 terminal 重啟的關係&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__ix9jgYF4WNB__2CT8TjpSyw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;建立一個 catbot 專案&lt;/p&gt;

&lt;p&gt;進專案資料夾&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yo hubot --adapter=slack&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__PhN6ANbQhfQRBnH6yhnAJw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用在 Slack 網站申請的 API Key 執行以下指令&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HUBOT\_SLACK\_TOKEN=xoxb-1299715080640-1559432386100-xxxxxxxxxx ./bin/hubot --adapter slack&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__7vEUvoo9C9dxZ__vcpxFXDQ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;要輸入關鍵字 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;help&lt;/code&gt; 才有效&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__pt__abw7JWPgLtYFwcw__bWQ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;簡單測試 ping，有回應 PONG 就是成功&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__CQvZpTGuGEt1GX2ZRjlmlw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;提示有說明 image me 是請 catbot 送一張圖片過來，但也提示要你自己設定自訂的搜尋引擎，預設的 Google 不一定能一直提供&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__VfbzeUYzYsVOBPpDFoQsIg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;也可以叫聊天機器人給我地圖&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__joJTW8YcDX0OJlmtNjQmrg.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/medium/1__8gctdPHOoWzHT1y8CCNTkw.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/medium/1__ZQLxBpP5A4DJdywYcAT0JQ.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/medium/1__v8jiQXVfhPu0NNsS5J3flA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外一個預設指令 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pug me&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__QPNLaTW5928hHl6KBd__Ruw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;因為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cabot&lt;/code&gt; 預設是使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;coffee script&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;照著搜尋到的教學加入一個 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;configcat.coffee&lt;/code&gt; 檔案&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__QrFA4MuZfQJei5Tsinx7uA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;輸入以下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__TxFDoCgdjt7wlq3n71oEUw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;無效….&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__bXGUMEj517xE6__1Q8JvQVg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;有可能是它引用的 API 位置已經掛掉了&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__OO9t5CuM__Sd3jX38p32cjg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不要用 Coffee Script，用 ES6 語法來寫&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://keestalkstech.com/2018/01/hubot-es6-promises/&quot;&gt;https://keestalkstech.com/2018/01/hubot-es6-promises/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__iPk8KLDf__MQM3gArSO6QNw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一樣失敗…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__E60P95kyD4Z8xKLh4LxPJw.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/medium/1__Pk4mVQEIcE0zxIbhz5si1w.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;有提示是說找不到 decode-html 這個模組&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__SPQ3kNTSaRcZp50uaAS1VQ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在專案中使用 npm 安裝&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install decode-html&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;輸入關鍵字「norris」，有回應了，隨機返回一個笑話&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__glVFFTHVYJ8THACruqnz0A.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;把它搬到自己的 Raspberry Pi 4 主機上執行&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HUBOT\_SLACK\_TOKEN=xoxb-1299715080640-1559432386100-xxxxxxxxxx ./bin/hubot --adapter slack&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__1S5VpmcilcH1n1Olse77Zg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;除了在專案中建立佈署主機的 SSH Key 外&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__RfR1yZVP01fUoWFyW6rpag.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;也要建立一開始的 Slack Hubot Key&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__VuvcMbF2NG3dfMHfJIMofA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注意⚠️&lt;/p&gt;

&lt;p&gt;因為佈署是透過 GitLab 的 CICD，所以要注意啟動機器人的語法&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;before_script:
- apt-get update &lt;span class=&quot;nt&quot;&gt;-qq&lt;/span&gt;
- apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-qq&lt;/span&gt; git
- &lt;span class=&quot;s1&quot;&gt;&apos;which ssh-agent || ( apt-get install -qq openssh-client )&apos;&lt;/span&gt;
- &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;ssh-agent &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
- ssh-add &amp;lt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PI4&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SSH&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;PRIVATE&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;KEY&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
- &lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; ~/.ssh
- &lt;span class=&quot;s1&quot;&gt;&apos;\[\[ -f /.dockerenv \]\] &amp;amp;&amp;amp; echo -e &quot;Host \*\\n\\tStrictHostKeyChecking no\\n\\n&quot; &amp;gt; ~/.ssh/config&apos;&lt;/span&gt;

deploy_staging:
&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: deploy
environment:
name: staging
url: http://220.132.xxx.xxx

script:
- ssh ben@220.132.xxx.xxx &lt;span class=&quot;nt&quot;&gt;-p10022&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cd /home/ben/projects/web &amp;amp;&amp;amp; 
  &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;rm -R catbot/ &amp;amp;&amp;amp; mkdir catbot &amp;amp;&amp;amp; exit&quot;&lt;/span&gt;
- ssh ben@220.132.xxx.xxx &lt;span class=&quot;nt&quot;&gt;-p10022&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cd /home/ben/projects/web/catbot &amp;amp;&amp;amp; 
  git clone git@gitlab.com:dkben/catbot.git . &amp;amp;&amp;amp; npm install &amp;amp;&amp;amp; exit&quot;&lt;/span&gt;
- ssh ben@220.132.xxx.xxx &lt;span class=&quot;nt&quot;&gt;-p10022&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cd /home/ben/projects/web/catbot &amp;amp;&amp;amp; 
  eval nohup HUBOT&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SLACK&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;TOKEN=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HUBOT&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SLACK&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;TOKEN ./bin/hubot --adapter slack &amp;amp;&quot;&lt;/span&gt;

only:
- master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;CICD 中有 passed 不代表機器人一定啟動成功&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__K__sN__LuupWrPbu6ayGYTgQ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果有要修改 CICD 的佈署腳本，最好還是本機先執行確認再 push&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__kCelmG39kJk1aqYBv__sMag.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用 GitLab CICD 佈署後，確定機器人有啟動&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__kY53nIB1__YZNrQwnhBKN__g.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;參考&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://dev.to/configcat/complete-guide-to-build-a-slack-chatbot-in-7-minutes-and-host-it-for-free-1ef8&quot;&gt;https://dev.to/configcat/complete-guide-to-build-a-slack-chatbot-in-7-minutes-and-host-it-for-free-1ef8&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://chatbotslife.com/building-a-slackbot-with-hubot-85016dd1477e&quot;&gt;https://chatbotslife.com/building-a-slackbot-with-hubot-85016dd1477e&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://springest.io/hubot-part-1-get-it-running-locally-in-slack&quot;&gt;http://springest.io/hubot-part-1-get-it-running-locally-in-slack&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://hubot.github.com/&quot;&gt;https://hubot.github.com/&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://github.com/hubotio/hubot/blob/master/docs/scripting.md&quot;&gt;https://github.com/hubotio/hubot/blob/master/docs/scripting.md&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://www.loggly.com/blog/building-chatops-bot-slack-loggly-part-1/&quot;&gt;https://www.loggly.com/blog/building-chatops-bot-slack-loggly-part-1/&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://chatbotslife.com/building-a-slackbot-with-hubot-85016dd1477e&quot;&gt;https://chatbotslife.com/building-a-slackbot-with-hubot-85016dd1477e&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://springest.io/hubot-part-1-get-it-running-locally-in-slack&quot;&gt;http://springest.io/hubot-part-1-get-it-running-locally-in-slack&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><category term="integrations" /><category term="Robot" /><summary type="html">先到自己的 Slack 安裝 Hubot App</summary></entry><entry><title type="html">在windows10下寫自動更新程式腳本</title><link href="/integrations/2021/03/10/%E5%9C%A8windows10%E4%B8%8B%E5%AF%AB%E8%87%AA%E5%8B%95%E6%9B%B4%E6%96%B0%E7%A8%8B%E5%BC%8F%E8%85%B3%E6%9C%AC.html" rel="alternate" type="text/html" title="在windows10下寫自動更新程式腳本" /><published>2021-03-10T22:09:32+08:00</published><updated>2021-03-10T22:09:32+08:00</updated><id>/integrations/2021/03/10/%E5%9C%A8windows10%E4%B8%8B%E5%AF%AB%E8%87%AA%E5%8B%95%E6%9B%B4%E6%96%B0%E7%A8%8B%E5%BC%8F%E8%85%B3%E6%9C%AC</id><content type="html" xml:base="/integrations/2021/03/10/%E5%9C%A8windows10%E4%B8%8B%E5%AF%AB%E8%87%AA%E5%8B%95%E6%9B%B4%E6%96%B0%E7%A8%8B%E5%BC%8F%E8%85%B3%E6%9C%AC.html">&lt;p&gt;關於自動化更新，之前有研究過在 Mac 筆電下用 &lt;a href=&quot;https://deployer.org/&quot;&gt;deployer&lt;/a&gt; 這個 PHP 工具來做佈署更新，也有回滾功能。&lt;/p&gt;

&lt;p&gt;不過這個專案比較麻煩，每次更新程式碼，要先登入指定的 VPN，然後手動進入 3 個位置進行 git 的更新，每次更新次數也很多，所以只能自己依需求寫一個自動化腳本。&lt;/p&gt;

&lt;p&gt;用這個方式的缺點：要把 git 的帳密寫在指令裡面，但因為登遠端看指令 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;history&lt;/code&gt; 沒有發現記錄，且 windows 10 是自己的，就當作安全了…(別學我XD)&lt;/p&gt;

&lt;p&gt;注意：這裡的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git pull&lt;/code&gt; 要輸入帳密是因為使用 http 方式更新，在正式機上是合理的，正式機不要使用 ssh key 方式更新。&lt;/p&gt;

&lt;p&gt;客戶測試機，因為客戶測試有鎖只能用 80 埠，所以設定另外一個 IP 給 git 主機。&lt;/p&gt;

&lt;p&gt;在 Windows 10 中建立一個 git51.txt&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;projects/project1
git pull http://user:password@xxx.xxx.xxx.xxx/ben/project1.git master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;客戶正式機&lt;/p&gt;

&lt;p&gt;在 Windows 10 中建立一個 git94.txt&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;projects/project1
git pull http://user:password@xxx.xxx.xxx.xxx/ben/project1.git master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;客戶備份機上的測試網站 ( 私用 )&lt;/p&gt;

&lt;p&gt;在 Windows 10 中建立一個 git96.txt&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;projects/project1
git pull http://user:password@xxx.xxx.xxx.xxx/ben/project1.git master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在 Windows 10 中建立 run.bat 執行檔&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;putty &lt;span class=&quot;nt&quot;&gt;-ssh&lt;/span&gt; ben@xxx.xxx.xxx.94 &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; git94.txt
putty &lt;span class=&quot;nt&quot;&gt;-ssh&lt;/span&gt; ben@xxx.xxx.xxx.96 &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; git96.txt
putty &lt;span class=&quot;nt&quot;&gt;-ssh&lt;/span&gt; ben@xxx.xxx.xxx.51 &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; git51.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__iCM__beOBV9G9qZoWQOrUNQ.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/medium/1__WrRFBC4vER8n2ackyUh7jg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;當然，還是要先連線客戶的 VPN，然後進資料夾，點 2 下 run.bat 檔案&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__gTvcqUUpPsuEDEfLejUT9w.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;使用上面的方法，發現遠端主機 pull 下來後，似乎會不同步本地分支，雖然程式碼看起來有更新，但並沒有自動的 merge&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;可以搜尋關鍵字&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master origin/master&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;改用以下方法&quot;&gt;改用以下方法!!!&lt;/h3&gt;

&lt;p&gt;將遠端的 git 帳密記錄在遠端位置，所以操控端的 script 只要下達 git pull 即可&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Bash script to automate Git pull&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/47339559/bash-script-to-automate-git-pull/47349643&quot;&gt;https://stackoverflow.com/questions/47339559/bash-script-to-automate-git-pull/47349643&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://git-scm.com/docs/git-credential-store&quot;&gt;https://git-scm.com/docs/git-credential-store&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;到遠端主機的專案下執行以下&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git config credential.helper store&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;然後再一次手動執行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git pull&lt;/code&gt; 輸入帳密，下次就不用再輸入帳密&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__lk__fYdumQsBSrt0TxrNQAw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;腳本換成以下&lt;/p&gt;

&lt;p&gt;客戶測試機&lt;/p&gt;

&lt;p&gt;在 Windows 10 中建立 git51.txt 和 git94.txt 和 git96.txt&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;projects/project1
git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在 Windows 10 中建立 run.bat 執行檔 ( 要先裝 putty 連線軟體 )&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;putty &lt;span class=&quot;nt&quot;&gt;-ssh&lt;/span&gt; ben@xxx.xxx.xxx.94 &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; git94.txt
putty &lt;span class=&quot;nt&quot;&gt;-ssh&lt;/span&gt; ben@xxx.xxx.xxx.96 &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; git96.txt
putty &lt;span class=&quot;nt&quot;&gt;-ssh&lt;/span&gt; ben@xxx.xxx.xxx.51 &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; git51.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最後一樣連線客戶 VPN 再進資料夾執行 run.bat 即可…&lt;/p&gt;

&lt;p&gt;接續上面的動作&lt;/p&gt;

&lt;p&gt;補上最後驗證是否有更新成功的動作&lt;/p&gt;

&lt;p&gt;指令稿分 2 段，前 3 行是更新，後 3 行是把遠端主機檔案拷貝回來&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__SIlDAdatuMSY3HemhrEvkQ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;前 3 個指令稿都類似，主要就是做 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git pull&lt;/code&gt; 的動作，最後加上一行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log&lt;/code&gt; 取出最後的 git 記錄並輸出到一個檔案&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__7onVLvGVQKcqhMOTNvR7bQ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;⚠️ 要先手動建立 git-log 資料夾&lt;/p&gt;

&lt;p&gt;執行後，會在本機 windows 中建立 3 個檔案&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__N5IWaYAzWEo1NACtii8DSw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;目前仍需要手動核對 3 個 log 檔案，確保程式碼是最新版本&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__3KLgx9Ys9Jj5k3eDLwUuyA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;主要的 bat&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;putty &lt;span class=&quot;nt&quot;&gt;-ssh&lt;/span&gt; ben@xxx.xxx.xxx.94 &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; script/git94.txt
putty &lt;span class=&quot;nt&quot;&gt;-ssh&lt;/span&gt; ben@xxx.xxx.xxx.96 &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; script/git96.txt
putty &lt;span class=&quot;nt&quot;&gt;-ssh&lt;/span&gt; ben@xxx.xxx.xxx.51 &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; script/git51.txt
pscp &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password ben@xxx.xxx.xxx.94:git.txt git-log/git-94.txt
pscp &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password ben@xxx.xxx.xxx.96:git.txt git-log/git-96.txt
pscp &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password ben@xxx.xxx.xxx.51:git.txt git-log/git-51.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;遠端指令稿&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;projects/project1
git pull
git log &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ~/git.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最後一段 XDD&lt;/p&gt;

&lt;p&gt;在 Windows 10 執行結果&lt;/p&gt;

&lt;p&gt;手動連線客戶 VPN&lt;/p&gt;

&lt;p&gt;執行更新程式 bat，由程式呼叫 Windows 裡的 Python 執行比對程式，進行 3 台主機的 Commit ID 檢查&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__RiQ0l2vd0Auos7spu819kg.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/medium/1__771qfaMGllYxJwgjqvSA2A.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;根目錄下有 2 個 bat 執行檔&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__MyLBs8Pt8U__tpjs9Y9dmdw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;run.bat 是專案更新程式&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;putty &lt;span class=&quot;nt&quot;&gt;-ssh&lt;/span&gt; ben@xxx.xxx.xxx.94 &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; script/git94.txt
putty &lt;span class=&quot;nt&quot;&gt;-ssh&lt;/span&gt; ben@xxx.xxx.xxx.96 &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; script/git96.txt
putty &lt;span class=&quot;nt&quot;&gt;-ssh&lt;/span&gt; ben@xxx.xxx.xxx.51 &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; script/git51.txt

pscp &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password ben@xxx.xxx.xxx.94:git.txt git-log/git-94.txt
pscp &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password ben@xxx.xxx.xxx.96:git.txt git-log/git-96.txt
pscp &lt;span class=&quot;nt&quot;&gt;-pw&lt;/span&gt; password ben@xxx.xxx.xxx.51:git.txt git-log/git-51.txt

&lt;span class=&quot;s2&quot;&gt;&quot;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Python38&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;python.exe&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ben&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Desktop&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Script&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;run.py&quot;&lt;/span&gt;

pause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;目錄裡的 script 腳本是登入遠端要執行的腳本，基本上大同小異&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/medium/1__wpYSSPf8a__Qw4URbFYIVnA.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/medium/1__krSJhHroaQTMZKcvavi3lw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="integrations" /><category term="Windows" /><summary type="html">關於自動化更新，之前有研究過在 Mac 筆電下用 deployer 這個 PHP 工具來做佈署更新，也有回滾功能。</summary></entry><entry><title type="html">Raspberry Pi 家用 Server 架設</title><link href="/integrations/2020/08/16/Raspberry-Pi-%E5%AE%B6%E7%94%A8-Server-%E6%9E%B6%E8%A8%AD.html" rel="alternate" type="text/html" title="Raspberry Pi 家用 Server 架設" /><published>2020-08-16T09:00:00+08:00</published><updated>2020-08-16T09:00:00+08:00</updated><id>/integrations/2020/08/16/Raspberry%20Pi%20%E5%AE%B6%E7%94%A8%20Server%20%E6%9E%B6%E8%A8%AD</id><content type="html" xml:base="/integrations/2020/08/16/Raspberry-Pi-%E5%AE%B6%E7%94%A8-Server-%E6%9E%B6%E8%A8%AD.html">&lt;p&gt;超省錢的 Server 架設方法&lt;/p&gt;

&lt;p&gt;目前是把親朋好友的網站搬回家裡的 Raspberry Pi 中存放，可以省下一些錢。&lt;/p&gt;

&lt;p&gt;遇到比較大的麻煩是，因為CPU是ARM架構，所以不是每一個Docker Image都可以用，要花時間找一下並測試。&lt;/p&gt;

&lt;p&gt;另外有一篇文章 &lt;a href=&quot;https://hsu-wen-i.medium.com/raspberry-4-jenkins-%E6%A8%B9%E8%8E%93%E6%B4%BE-4-%E5%AE%89%E8%A3%9D%E5%9F%B7%E8%A1%8C-jenkins-%E5%85%A8%E8%A8%98%E9%8C%84-b4899c7219b3&quot;&gt;Raspberry 4 Jenkins — 樹莓派 4 安裝執行 Jenkins (全記錄)&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;2020 年8月16日收到&lt;/p&gt;

&lt;p&gt;一次買 3 台，其中有一台是同事的&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/raspberry-pi4-server/raspberry-pi4-server-01.png&quot; alt=&quot;Raspberry Pi4&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;有送袋子&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/raspberry-pi4-server/raspberry-pi4-server-02.png&quot; alt=&quot;Raspberry Pi4&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/raspberry-pi4-server/raspberry-pi4-server-03.png&quot; alt=&quot;Raspberry Pi4&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/raspberry-pi4-server/raspberry-pi4-server-04.png&quot; alt=&quot;Raspberry Pi4&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/raspberry-pi4-server/raspberry-pi4-server-05.png&quot; alt=&quot;Raspberry Pi4&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;變壓器比想像中還大，所以只是這樣接，將來可能會換成 USB 電源 HUB，可以節省空間&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/raspberry-pi4-server/raspberry-pi4-server-06.png&quot; alt=&quot;Raspberry Pi4&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;選擇無桌面版本，直接 CLI 介面操作&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/raspberry-pi4-server/raspberry-pi4-server-07.png&quot; alt=&quot;Raspberry Pi4&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Raspberry Pi 4 的接線方式，螢幕要接在 HDMI-1 的位置&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/raspberry-pi4-server/raspberry-pi4-server-08.png&quot; alt=&quot;Raspberry Pi4&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/raspberry-pi4-server/raspberry-pi4-server-09.png&quot; alt=&quot;Raspberry Pi4&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/raspberry-pi4-server/raspberry-pi4-server-10.png&quot; alt=&quot;Raspberry Pi4&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;安裝-docker&quot;&gt;安裝 Docker&lt;/h2&gt;

&lt;p&gt;下載安裝腳本&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl -fsSL https://get.docker.com -o get-docker.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;執行安裝腳本&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo sh get-docker.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;裝好要重啟系統才會正常&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/raspberry-pi4-server/raspberry-pi4-server-11.png&quot; alt=&quot;Raspberry Pi4&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;另外，也在樹莓派上掛載免費的Google Drive 15GB空間 (使用 rclone 工具)&lt;/p&gt;</content><author><name></name></author><category term="integrations" /><category term="RaspberryPi" /><summary type="html">超省錢的 Server 架設方法</summary></entry><entry><title type="html">Linux KVM 虛擬主機實作</title><link href="/linux/2014/01/01/Linux-KVM-%E8%99%9B%E6%93%AC%E4%B8%BB%E6%A9%9F%E5%AF%A6%E4%BD%9C.html" rel="alternate" type="text/html" title="Linux KVM 虛擬主機實作" /><published>2014-01-01T09:00:00+08:00</published><updated>2014-01-01T09:00:00+08:00</updated><id>/linux/2014/01/01/Linux%20KVM%20%E8%99%9B%E6%93%AC%E4%B8%BB%E6%A9%9F%E5%AF%A6%E4%BD%9C</id><content type="html" xml:base="/linux/2014/01/01/Linux-KVM-%E8%99%9B%E6%93%AC%E4%B8%BB%E6%A9%9F%E5%AF%A6%E4%BD%9C.html">&lt;p&gt;使用Linux KVM實作虛擬主機的操作&lt;/p&gt;

&lt;p&gt;這是 2014 年時的實作記錄，文章在原本的Blog中&lt;/p&gt;

&lt;p&gt;文章分類
&lt;a href=&quot;http://ps.hsuweni.idv.tw/?cat=81&quot;&gt;外部連結&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;修改 Window 裡的 hosts 檔案，連結虛擬機裡的網站
&lt;a href=&quot;http://ps.hsuweni.idv.tw/?p=5116&quot;&gt;外部連結&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;隨時隨地都可以登入 VM，就算沒有網路也可以本機登入 VM
&lt;a href=&quot;http://ps.hsuweni.idv.tw/?p=5084&quot;&gt;外部連結&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;解決 win8 升級 win10 後，VirtualBox VM 無法開機的問題
&lt;a href=&quot;http://ps.hsuweni.idv.tw/?p=5076&quot;&gt;外部連結&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;KVM Bridge 橋接模式網路設定記錄
&lt;a href=&quot;http://ps.hsuweni.idv.tw/?p=4495&quot;&gt;外部連結&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;KVM虛擬機網路問題
&lt;a href=&quot;http://ps.hsuweni.idv.tw/?p=4309&quot;&gt;外部連結&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;大量架設虛擬機 Server 時，如何減少設定的時間？
&lt;a href=&quot;http://ps.hsuweni.idv.tw/?p=4237&quot;&gt;外部連結&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;完整安裝KVM-Host流程
&lt;a href=&quot;http://ps.hsuweni.idv.tw/?p=3059&quot;&gt;外部連結&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;關於此次花費7天測試KVM的心得
&lt;a href=&quot;http://ps.hsuweni.idv.tw/?p=3052&quot;&gt;外部連結&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;實驗用的主機
&lt;img src=&quot;/images/linux-kvm/linux-kvm-01.jpg&quot; alt=&quot;系統管理後台&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="Linux" /><category term="Linux" /><summary type="html">使用Linux KVM實作虛擬主機的操作</summary></entry><entry><title type="html">多線路頻寬合併</title><link href="/linux/2014/01/01/%E5%A4%9A%E7%B7%9A%E8%B7%AF%E9%A0%BB%E5%AF%AC%E5%90%88%E4%BD%B5.html" rel="alternate" type="text/html" title="多線路頻寬合併" /><published>2014-01-01T09:00:00+08:00</published><updated>2014-01-01T09:00:00+08:00</updated><id>/linux/2014/01/01/%E5%A4%9A%E7%B7%9A%E8%B7%AF%E9%A0%BB%E5%AF%AC%E5%90%88%E4%BD%B5</id><content type="html" xml:base="/linux/2014/01/01/%E5%A4%9A%E7%B7%9A%E8%B7%AF%E9%A0%BB%E5%AF%AC%E5%90%88%E4%BD%B5.html">&lt;p&gt;自己的 Site project&lt;/p&gt;

&lt;p&gt;使用多台ADSL實作多線路頻寬合併&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/bandwidth/bandwidth-01.png&quot; alt=&quot;使用多台ADSL實作多線路頻寬合併&quot; width=&quot;800px&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><category term="Linux" /><category term="Linux" /><summary type="html">自己的 Site project</summary></entry></feed>